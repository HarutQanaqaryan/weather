{"version":3,"sources":["helper/convert_date.ts","helper/normalize_functions.ts","helper/render_weather_card.tsx","helper/render_wrapper.tsx","helper/fetch_data.ts","components/search_by_city_name.tsx","components/home_page_weather.tsx","App.tsx","index.tsx"],"names":["convertDate","date","normalizeDate","seconds","time","Date","getDate","getMonth","getFullYear","getHours","getUTCMinutes","normalizeTemp","temp","Math","round","RenderWeatherCard","data","useState","isOpen","setIsOpen","useEffect","map","_","idx","id","open","openMoreDetails","event","el","parseInt","currentTarget","className","dt","src","weather","icon","alt","main","description","feels_like","onClick","some","temp_min","temp_max","humidity","pressure","RenderWrapper","loading","cityName","getData","count","fetch","SearchByCityName","setData","localStorage","getItem","setCityName","setLoading","then","r","json","list","prevState","catch","err","console","log","placeholder","value","onChange","preventDefault","target","React","memo","GetWeather","getClickedCityWeather","innerText","setItem","App","to","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.977b4733.chunk.js","sourcesContent":["const convertDate = (date: number) => {\r\n  switch (date) {\r\n    case 0:\r\n      return \"Jan\";\r\n    case 1:\r\n      return \"Feb\";\r\n    case 2:\r\n      return \"Mar\";\r\n    case 3:\r\n      return \"Apr\";\r\n    case 4:\r\n      return \"May\";\r\n    case 5:\r\n      return \"Jun\";\r\n    case 6:\r\n      return \"Jul\";\r\n    case 7:\r\n     return  \"Aug\";\r\n    case 8:\r\n      return \"Sep\";\r\n    case 9:\r\n      return \"Oct\";\r\n    case 10:\r\n      return \"Nov\";\r\n    case 11:\r\n      return \"Dec\";\r\n    default:\r\n        return date;\r\n  }\r\n};\r\n\r\nexport default convertDate;","import convertDate from \"./convert_date\";\r\n\r\nexport const normalizeDate = (seconds: number): string => {\r\n  const normalizeTime = (time: number) => (time <= 9 ? \"0\" + time : time);\r\n  let date = new Date(seconds);\r\n  return `${date.getDate()} ${convertDate(\r\n    date.getMonth()\r\n  )} ${date.getFullYear()} ${date.getHours()}:${normalizeTime(\r\n    date.getUTCMinutes()\r\n  )}`;\r\n};\r\n\r\nexport const normalizeTemp = (temp: number): number => {\r\n  return Math.round(temp - 273.15);\r\n};\r\n","import { useState, useEffect, FC, MouseEvent } from \"react\";\r\nimport { normalizeDate, normalizeTemp } from \"./normalize_functions\";\r\n\r\ninterface RenderWeatherCardProps {\r\n  data: any[]\r\n}\r\n\r\nconst RenderWeatherCard: FC<RenderWeatherCardProps> = ({ data }) => {\r\n  const [isOpen, setIsOpen] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    setIsOpen(data.map((_: any, idx: number) => ({ id: idx, open: false })));\r\n  }, [data]);\r\n\r\n\r\n  const openMoreDetails = (event: MouseEvent<HTMLButtonElement>) => {\r\n    setIsOpen(\r\n      isOpen.map((el: any) =>\r\n        el.id === parseInt(event.currentTarget.id) ? { ...el, open: !el.open } : el\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"data_block\">\r\n      {data.map((el: any, idx: any) => (\r\n      <div key={idx} className=\"weather_card\">\r\n          <h4 className=\"date\">{normalizeDate(el.dt * 1000)}</h4>\r\n          <img\r\n            src={`https://openweathermap.org/img/wn/${el.weather[0].icon}@2x.png`}\r\n            alt=\"Weather Icon\"\r\n            className=\"weather_icon\"\r\n          />\r\n          <h1 className=\"main_temp\">{normalizeTemp(el.main.temp)}째c</h1>\r\n          <h5 className=\"weather_desctription\">{el.weather[0].description}</h5>\r\n          <h5>\r\n            <span className=\"desctription_header\">Feels Like </span>\r\n            {normalizeTemp(el.main.feels_like)}째C\r\n          </h5>\r\n        <button className=\"more_details_btn\" id={idx} onClick={openMoreDetails}>\r\n          More Details\r\n        </button>\r\n        {isOpen.some((el: any) => el.open && el.id === idx) && (\r\n          <div className=\"weather_desctriptions\">\r\n            <b className=\"temp_header\">Min Temp </b>\r\n            <span className=\"temp\">{normalizeTemp(el.main.temp_min)}째c</span>\r\n            <br />\r\n            <b className=\"temp_header\">Max Temp </b>\r\n            <span className=\"temp\">{normalizeTemp(el.main.temp_max)}째c</span>\r\n            <b>\r\n              <span className=\"desctription_header\">Humidity </span>\r\n              {el.main.humidity}%\r\n            </b>\r\n            <b>\r\n              <span className=\"desctription_header\">Pressure </span>\r\n              {el.main.pressure}hPa\r\n            </b>\r\n          </div>\r\n        )}\r\n      </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RenderWeatherCard;\r\n","import RenderWeatherCard from \"./render_weather_card\";\r\n\r\ninterface RenderWrapperProps {\r\n  loading: boolean;\r\n  cityName: string;\r\n  data: any[]\r\n}\r\n\r\nconst RenderWrapper = ({ loading, cityName, data }: RenderWrapperProps) => {\r\n  return (\r\n    <div className=\"wrapper_weather\">\r\n      <h2 className=\"city_name_header\">{cityName}</h2>\r\n      {loading && <div className=\"loading\"></div>}\r\n      <div className=\"data_block\">{<RenderWeatherCard data={data} />}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RenderWrapper;\r\n","const API_KEY = `6a7c24bc3b75b3a53d16bcec8f105fec`;\r\n\r\n\r\nconst getData = (cityName: string, count: number): Promise<any> => {\r\n   return fetch(\r\n        `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&units=metric\r\n              &cnt=${count}&appid=${API_KEY}`\r\n      )\r\n}\r\n\r\nexport default getData;","import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport RenderWrapper from \"../helper/render_wrapper\";\r\nimport getData from \"../helper/fetch_data\";\r\nimport \"./weather_app.css\";\r\n\r\nconst SearchByCityName = () => {\r\n  const [data, setData] = useState<any[]>([]);\r\n  const [cityName, setCityName] = useState<string>(\r\n    localStorage.getItem(\"city_name\") || \"Minsk\"\r\n  );\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getData(cityName, 40)\r\n      .then((r) => r.json())\r\n      .then((data) => {\r\n        data.list.map((el: {}) => setData((prevState) => [...prevState, el]));\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    return () => {\r\n      setData([]);\r\n    };\r\n  }, [cityName]);\r\n\r\n  const handleSearch = (event: ChangeEvent<HTMLInputElement>): void => {\r\n      event.preventDefault();\r\n      setCityName(event.target.value);\r\n    };\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        className=\"search\"\r\n        placeholder=\"Type city name...\"\r\n        value={cityName}\r\n        onChange={handleSearch}\r\n      />\r\n      <RenderWrapper loading={loading} cityName={cityName} data={data} />\r\n    </>\r\n  );\r\n  }\r\n\r\nexport default React.memo(SearchByCityName);\r\n","import React, { MouseEvent } from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./weather_app.css\";\r\nimport getData from \"../helper/fetch_data\";\r\nimport RenderWrapper from \"../helper/render_wrapper\";\r\n\r\nconst GetWeather = () => {\r\n  const [data, setData] = useState<any[]>([]);\r\n  const [cityName, setCityName] = useState<string>(\r\n    localStorage.getItem(\"city_name\") || \"Minsk\"\r\n  );\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getData(cityName, 17)\r\n      .then((r) => r.json())\r\n      .then((data) => {\r\n        data.list.map(\r\n          (el: {}, idx: number) => {\r\n           return idx % 8 === 0 && setData((prevState) => [...prevState, el])\r\n          }\r\n           \r\n        );\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    return () => {\r\n      setData([]);\r\n    };\r\n  }, [cityName]);\r\n\r\n  const getClickedCityWeather = (event: MouseEvent<HTMLButtonElement>): void => {\r\n    event.preventDefault();\r\n    setCityName(event.currentTarget.innerText);\r\n    localStorage.setItem(\"city_name\", event.currentTarget.innerText);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={getClickedCityWeather} className=\"city_name_btn\">\r\n        Minsk\r\n      </button>\r\n      <button onClick={getClickedCityWeather} className=\"city_name_btn\">\r\n        Bratislava\r\n      </button>\r\n      <button onClick={getClickedCityWeather} className=\"city_name_btn\">\r\n        Moscow\r\n      </button>\r\n      <RenderWrapper loading={loading} cityName={cityName} data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(GetWeather);\r\n","import { Link, Routes, Route} from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport SearchByCityName from \"./components/search_by_city_name\";\r\nimport GetWeather from \"./components/home_page_weather\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n        <Link to=\"/\" className=\"nav_btn\">\r\n          Home\r\n        </Link>\r\n        <Link to=\"/search_weather\" className=\"nav_btn\">\r\n          Search\r\n        </Link>\r\n        <Routes>\r\n          <Route path={\"/\"} element={<GetWeather />} />\r\n          <Route path={\"search_weather\"} element={<SearchByCityName />} />\r\n        </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n  <App />\r\n</BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}